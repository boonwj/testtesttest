name: Hotfix

on:
  pull_request:
    branches:
      - main
      - master
    types: [closed]

jobs:
  test:
    runs-on: ubuntu-18.04
    # if: "${{ github.event.pull_request.merged }}"
    # if: ${{ github.event.label.name == 'hotfix' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Check/create release branch
        run: |
          release_version=$(/usr/bin/git tag --sort=-refname --list v* | head -n 1 | xargs)
          echo "${release_version}"
          release_branch="release--${release_version%.*}.x"
          echo "${release_branch}"
          remote_release=$(/usr/bin/git branch --all --list "*${release_branch}" --sort=-refname | head -n 1 | xargs)
          echo "${remote_release}"

          if ! [[ "${remote_release}" ]]; then
            echo "No compatible release branches found. Creating: ${remote_release}"
            git checkout -b "${release_branch}" "${release_version}"
            git push origin "${release_branch}"
          fi

          PR_BRANCH="auto--hotfix-from-PR${{ github.event.pull_request.number }}"

          git checkout -b "${PR_BRANCH}" "origin/${release_branch}"

          echo "${release_version}"
          echo "${release_branch}"
          echo "${remote_release}"

      - name: Cherry-pick Commit
        run: |
          pr_num="#${{ github.event.pull_request.number }}"
          merged_commit_info=$(git log --all --grep="${pr_num}" --oneline)  #to update to PR number
          commit_id="${merged_commit_info:0:7}"
          commit_message="${merged_commit_info:8}"

          echo "${pr_num}"
          echo "${commit_id}"
          echo "${commit_message}"
          echo "---"
          echo "$(git log)"
          echo "---"
          echo "$(git status)"
          echo "---"
          echo "$(git branch)"
          echo "---"

          git cherry-pick ${commit_id}
          echo "$(git show)"

          #    - name: pull-request
          #      uses: repo-sync/pull-request@v2
          #      with:
          #        source_branch: ""                                 # If blank, default: triggered branch
          #        destination_branch: "master"                      # If blank, default: master
          #        pr_title: "Pulling ${{ github.ref }} into master" # Title of pull request
          #        pr_body: ":crown: *An automated PR*"              # Full markdown support, requires pr_title to be set
          #        pr_template: ".github/PULL_REQUEST_TEMPLATE.md"   # Path to pull request template, requires pr_title to be set, excludes pr_body
          #        pr_reviewer: "wei,worker"                         # Comma-separated list (no spaces)
          #        pr_assignee: "wei,worker"                         # Comma-separated list (no spaces)
          #        pr_label: "auto-pr"                               # Comma-separated list (no spaces)
          #        pr_milestone: "Milestone 1"                       # Milestone name
          #        pr_draft: true                                    # Creates pull request as draft
          #        pr_allow_empty: true                              # Creates pull request even if there are no changes
          #        github_token: ${{ secrets.GITHUB_TOKEN }}
